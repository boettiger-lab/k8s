# This file can update the JupyterHub Helm chart's default configuration values.
#
# For reference see the configuration reference and default values, but make
# sure to refer to the Helm chart version of interest to you!
#
# Introduction to YAML:     https://www.youtube.com/watch?v=cdLNKUoMc6c
# Chart config reference:   https://zero-to-jupyterhub.readthedocs.io/en/stable/resources/reference.html
# Chart default values:     https://github.com/jupyterhub/zero-to-jupyterhub-k8s/blob/HEAD/jupyterhub/values.yaml
# Available chart versions: https://hub.jupyter.org/helm-chart/
#
# NOTE: The singleuser.networkPolicy configuration below replaces the functionality
# of enable-external-access.sh and allows hairpin connections for JupyterHub pods
# to access external services like minio.carlboettiger.info and other cluster services.
#
ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-production
    kubernetes.io/ingress.class: traefik
  tls:
  - hosts:
    - jupyterhub.cirrus.carlboettiger.info
    secretName: jupyter-cirrus-tls
  hosts: 
  - "jupyterhub.cirrus.carlboettiger.info"  
cull:
  enabled: false
singleuser:
  image:
    pullPolicy: Always
  storage:
    capacity: 60Gi
    extraVolumeMounts:
      - name: "volume-{user_server}"
        mountPath: /home/rstudio
      - name: shm-volume
        mountPath: /dev/shm
    extraVolumes:
      - name: shm-volume
        emptyDir:
          medium: Memory
  networkPolicy:
    enabled: true
    egressAllowRules:
      # Enable access to private IP ranges (for MinIO and other cluster services)
      privateIPs: true
      # Keep DNS resolution working
      dnsPortsPrivateIPs: true
      dnsPortsKubeSystemNamespace: true
      # Allow internet access (excluding private ranges) - enables hairpin connections
      nonPrivateIPs: true
    egress:
      # Specific access to your external IP (minio.carlboettiger.info at 128.32.85.8)
      - to:
          - ipBlock:
              cidr: 128.32.85.8/32
      # Allow access to MinIO namespace by label selector
      - to:
          - namespaceSelector:
              matchLabels:
                name: minio
  extraFiles:
    jupyter_server_config.json:
        mountPath: /usr/local/etc/jupyter/jupyter_server_config.json
        data:
          # Allow JupyterLab to show the 'View -> Show Hidden Files' option
          # in the menu. Defaults are not changed.
          # https://github.com/jupyterlab/jupyterlab/issues/11304#issuecomment-945466766
          ContentsManager:
            allow_hidden: true
          FileContentsManager:
            always_delete_dir: true
  profileList:
    - display_name: "Choose your environment and resources"
      default: true
      profile_options:
        image:
          display_name: Environment
          dynamic_image_building:
            enabled: True
          unlisted_choice:
            enabled: True
            display_name: "Custom image"
            display_name_in_choices: "Specify an existing docker image"
            description_in_choices: "Use a pre-existing docker image from a public docker registry"
            description: Specify your own docker image (must have python and jupyterhub installed in it)
            validation_regex: "^.+:.+$"
            validation_message: "Must be a publicly available docker image, of form <image-name>:<tag>"
            kubespawner_override:
              image: "{value}"
              working_dir: /home/rstudio
          choices:
            01-cpu:
              display_name: CPU 
              description: General purpose python + R (with RStudio) environment 
              kubespawner_override:
                image:  "ghcr.io/boettiger-lab/k8s:latest"
                working_dir: /home/rstudio
            02-gpu:
              display_name: RL
              description: CUDA GPU environment, with RL 
              kubespawner_override:
                image: "ghcr.io/boettiger-lab/k8s-gpu:latest"
                working_dir: /home/rstudio
            03-gpu-spatial:
              display_name: GPU Spatial
              description: Rapids-AI GPU Spatial environment
              kubespawner_override:
                image: "ghcr.io/rocker-org/cuda-spatial:latest"
                default_url: /vscode
        resource_allocation:
          display_name: Resource Allocation
          choices:
            mem_8:
              display_name: 8 GB RAM
              kubespawner_override:
                mem_guarantee: 8G
                mem_limit: 8G
                cpu_limit: 12
              default: true
            mem_16:
              display_name: 16 GB RAM
              kubespawner_override:
                mem_guarantee: 16G
                mem_limit: 16G
                cpu_limit: 12
            mem_32:
              display_name: 32 GB RAM
              kubespawner_override:
                mem_guarantee: 32G
                mem_limit: 32G 
            mem_64:
              display_name: 64 GB RAM (preemptable)
              kubespawner_override:
                mem_guarantee: 32G
                mem_limit: 64G 
            special:
              display_name: special use
              kubespawner_override:
                mem_guarantee: 32G
                mem_limit: 120G 

hub:
  allowNamedServers: true
  config:
    # Shared settings. we don't need nvidia to be default
    KubeSpawner:
      environment:
        SHELL: /usr/bin/bash
        GH_SCOPED_CREDS_CLIENT_ID: "Iv1.8d384d9612c2ecc3"
        GH_SCOPED_CREDS_APP_URL: "https://github.com/apps/jupyterhub-gh-creds"
        AWS_S3_ENDPOINT: "minio.carlboettiger.info"
        AWS_PUBLIC_ENDPOINT: "$AWS_S3_ENDPOINT"
        AWS_HTTPS: "true"
        AWS_VIRTUAL_HOSTING: "FALSE"
      extra_pod_config:
        runtimeClassName: "nvidia"
    Authenticator:
      admin_users:
        - cboettig 
    GitHubOAuthenticator:
      allowed_organizations:
        - boettiger-lab:current-members
        - boettiger-lab
        - SchmidtDSE
      scope:
        - read:org
      oauth_callback_url: https://jupyterhub.cirrus.carlboettiger.info/hub/oauth_callback
    JupyterHub:
      authenticator_class: github
  services:
    binder:
      url: http://binderhub
  image:
    name: quay.io/yuvipanda/z2jh-hub-with-fancy-profiles
    tag: z2jh-v4.0.0-fancy-profiles-sha-f80b661      
  extraConfig:
    enable-fancy-profiles: |
      from jupyterhub_fancy_profiles import setup_ui
      setup_ui(c)


